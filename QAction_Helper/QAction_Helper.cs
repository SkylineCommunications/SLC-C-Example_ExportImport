// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 10 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int filelocation_10 = 10;
	/// <summary>PID: 10 | Type: read</summary>
	public const int filelocation = 10;
	public class Write
	{
		/// <summary>PID: 11 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int filelocation_11 = 11;
		/// <summary>PID: 11 | Type: write</summary>
		public const int filelocation = 11;
		/// <summary>PID: 20 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int exporttofile_20 = 20;
		/// <summary>PID: 20 | Type: write</summary>
		public const int exporttofile = 20;
		/// <summary>PID: 21 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int importfromfile_21 = 21;
		/// <summary>PID: 21 | Type: write</summary>
		public const int importfromfile = 21;
		/// <summary>PID: 990 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int data_contextmenu_990 = 990;
		/// <summary>PID: 990 | Type: write</summary>
		public const int data_contextmenu = 990;
	}
	public class Data
	{
		/// <summary>PID: 1000</summary>
		public const int tablePid = 1000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1001</summary>
		public const int indexColumnPid = 1001;
		public class Pid
		{
			/// <summary>PID: 1001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int data_index_1001 = 1001;
			/// <summary>PID: 1001 | Type: read</summary>
			public const int data_index = 1001;
			/// <summary>PID: 1002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int data_name_1002 = 1002;
			/// <summary>PID: 1002 | Type: read</summary>
			public const int data_name = 1002;
			/// <summary>PID: 1003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int data_number_1003 = 1003;
			/// <summary>PID: 1003 | Type: read</summary>
			public const int data_number = 1003;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int data_index_1001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int data_index = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int data_name_1002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int data_name = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int data_number_1003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int data_number = 2;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 11  | Type: write</summary>
	public System.Object Filelocation {get { return Protocol.GetParameter(11); }set { Protocol.SetParameter(11, value); }}
	/// <summary>PID: 20  | Type: write | DISCREETS: Export to CSV = 0, Export to XML = 1, Export to JSON = 2</summary>
	public System.Object Exporttofile {get { return Protocol.GetParameter(20); }set { Protocol.SetParameter(20, value); }}
	/// <summary>PID: 21  | Type: write | DISCREETS: Import From CSV = 0, Import From XML = 1, Import From JSON = 2</summary>
	public System.Object Importfromfile {get { return Protocol.GetParameter(21); }set { Protocol.SetParameter(21, value); }}
	/// <summary>PID: 990  | Type: write | DISCREETS: Add item... = 1, Duplicate item... = 2, Separator 1 = -1, Edit item... = 10, Separator 2 = -2, Delete selected item(s) = 20</summary>
	public System.Object Data_contextmenu {get { return Protocol.GetParameter(990); }set { Protocol.SetParameter(990, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 1000</summary>
	DataQActionTable data { get; set; }
	object Afterstartup_dummy { get; set; }
	object Filelocation_10 { get; set; }
	object Filelocation { get; set; }
	object Filelocation_11 { get; set; }
	object Exporttofile_20 { get; set; }
	object Exporttofile { get; set; }
	object Importfromfile_21 { get; set; }
	object Importfromfile { get; set; }
	object Data_contextmenu_990 { get; set; }
	object Data_contextmenu { get; set; }
	object Data_index_1001 { get; set; }
	object Data_index { get; set; }
	object Data_name_1002 { get; set; }
	object Data_name { get; set; }
	object Data_number_1003 { get; set; }
	object Data_number { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 1000</summary>
	public DataQActionTable data { get; set; }
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 10  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Filelocation_10 {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 10  | Type: read</summary>
	public System.Object Filelocation {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 11  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Filelocation_11 {get { return GetParameter(11); }set { SetParameter(11, value); }}
	/// <summary>PID: 20  | Type: write | DISCREETS: Export to CSV = 0, Export to XML = 1, Export to JSON = 2</summary>
	public System.Object Exporttofile_20 {get { return GetParameter(20); }set { SetParameter(20, value); }}
	/// <summary>PID: 20  | Type: write | DISCREETS: Export to CSV = 0, Export to XML = 1, Export to JSON = 2</summary>
	public System.Object Exporttofile {get { return Write.Exporttofile; }set { Write.Exporttofile = value; }}
	/// <summary>PID: 21  | Type: write | DISCREETS: Import From CSV = 0, Import From XML = 1, Import From JSON = 2</summary>
	public System.Object Importfromfile_21 {get { return GetParameter(21); }set { SetParameter(21, value); }}
	/// <summary>PID: 21  | Type: write | DISCREETS: Import From CSV = 0, Import From XML = 1, Import From JSON = 2</summary>
	public System.Object Importfromfile {get { return Write.Importfromfile; }set { Write.Importfromfile = value; }}
	/// <summary>PID: 990  | Type: write | DISCREETS: Add item... = 1, Duplicate item... = 2, Separator 1 = -1, Edit item... = 10, Separator 2 = -2, Delete selected item(s) = 20</summary>
	public System.Object Data_contextmenu_990 {get { return GetParameter(990); }set { SetParameter(990, value); }}
	/// <summary>PID: 990  | Type: write | DISCREETS: Add item... = 1, Duplicate item... = 2, Separator 1 = -1, Edit item... = 10, Separator 2 = -2, Delete selected item(s) = 20</summary>
	public System.Object Data_contextmenu {get { return Write.Data_contextmenu; }set { Write.Data_contextmenu = value; }}
	/// <summary>PID: 1001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Data_index_1001 {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	public System.Object Data_index {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Data_name_1002 {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	public System.Object Data_name {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Data_number_1003 {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	public System.Object Data_number {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		data = new DataQActionTable(this, 1000, "data");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class DataQActionTable : QActionTable, IEnumerable<DataQActionRow>
{
	public DataQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<DataQActionRow> GetEnumerator() { return new QActionTableEnumerator<DataQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class DataQActionRow : QActionTableRow
{
	/// <summary>PID: 1001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Data_index_1001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1001 | Type: read</summary>
	public System.Object Data_index { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Data_name_1002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	public System.Object Data_name { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Data_number_1003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	public System.Object Data_number { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public DataQActionRow() : base(0, 3) { }
	public DataQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator DataQActionRow(System.Object[] source) { return new DataQActionRow(source); }
	public static implicit operator System.Object[](DataQActionRow source) { return source.ToObjectArray(); }
}
}
